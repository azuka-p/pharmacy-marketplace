services:
    nginx:
        image: nginx:1.27.3-alpine3.20
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
            - ./logs:/var/log/nginx
        ports:
            - "80:80"
            - "443:443"
        network_mode: host
        depends_on:
            - frontend
            - backend

    redis:
        image: redis:7.4.1
        restart: always
        ports:
            - "6379:6379"
        network_mode: host

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        env_file:
            - ./backend/docker.env
        ports:
            - '8080:8080'
        network_mode: host
        extra_hosts:
            - "host.docker.internal:host-gateway"
        depends_on:
            - redis

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - '3003:3003'
        network_mode: host
        env_file:
            - ./frontend/docker.env
        depends_on:
            - backend

    cadvisor:
        container_name: cadvisor
        image: gcr.io/cadvisor/cadvisor:v0.49.2
        platform: linux/amd64
        ports:
            - "8088:8088"
        command:
            - '-port=8088'
        network_mode: host
        volumes:
            - "/:/rootfs"
            - "/var/run:/var/run"
            - "/sys:/sys"
            - "/var/lib/docker/:/var/lib/docker"
            - "/dev/disk/:/dev/disk"
        privileged: true
        devices:
            - "/dev/kmsg"

    prometheus:
        container_name: prometheus
        image: prom/prometheus:v2.54.1
        ports:
            - "9090:9090"
        network_mode: host
        volumes:
            - "./infra/prometheus.yml:/etc/prometheus/prometheus.yml"
        privileged: true
        depends_on:
            - cadvisor

    grafana:
        container_name: grafana
        image: grafana/grafana:11.2.0
        ports:
            - "3000:3000"
        network_mode: host
        environment:
            - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
            - DS_PROMETHEUS=prometheus
            - GF_SMTP_ENABLED=true
            - GF_SMTP_HOST=smtp.resend.com:587
            - GF_SMTP_USER=${GF_SMTP_USER}
            - GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
            - GF_SERVER_ROOT_URL=https://pharmacy.shop/grafana
        volumes:
            - "grafana-data:/var/lib/grafana"
            - "./infra/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml"
            - "./infra/dashboard.json:/var/lib/grafana/dashboards/dashboard.json"
            - "./infra/default.yaml:/etc/grafana/provisioning/dashboards/default.yaml"
        privileged: true
        depends_on:
            - prometheus

    postgres-exporter:
        container_name: postgresql-exporter
        image: prometheuscommunity/postgres-exporter:v0.15.0
        ports:
            - "9187:9187"
        network_mode: host
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            DATA_SOURCE_NAME: "postgresql://postgres:root@host.docker.internal:5432/pharmacy_db?sslmode=disable"

    loki:
        image: grafana/loki:2.9.4
        ports:
            - '3100:3100'
        network_mode: host
        command: -config.file=/etc/loki/local-config.yaml

    promtail:
        image: grafana/promtail:2.9.4
        ports:
            - '9080:9080'
        network_mode: host
        volumes:
            - /var/lib/docker/containers:/var/lib/docker/containers
            - ./infra/promtail-config.yml:/etc/promtail-config.yml
            - /var/run/docker.sock:/var/run/docker.sock
        command: -config.file=/etc/promtail-config.yml

volumes:
    grafana-data: